{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/gallery.js","src/modules/home.js","src/modules/photos.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/gallery.js","src/resources/data/photos.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","GalleryList","gallery","user","JSON","parse","sessionStorage","getItem","title","showGallery","logout","removeItem","navigate","createGallery","galleryObj","description","userId","_id","saveGallery","save","response","error","alert","getUserGallery","activate","editGallery","deleteGallery","back","showGalleryOrAdd","setItem","stringify","Home","users","loginError","message","showLogin","login","email","password","catch","console","log","showRegister","firstName","lastName","registerError","serverResponse","goback","PhotoGallery","photo","editPhoto2","showPhotos","PHOTO_SERVICE","savePhoto","photoObj","galleryId","photoId","filesToUpload","length","uploadFile","getUserPhoto","changeFiles","Array","push","files","removeFile","index","splice","deletePhoto","editPhoto","photoObj2","saveEditedPhoto","saveEdited","back2","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","Gallery","GALLERY_SERVICE","galleryArray","id","i","Photos","photoArray","formData","FormData","forEach","item","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","DateFormatValueConverter","toView","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep);\n    config.map([\n      {\n    route: ['', 'home'],\n     moduleId: './modules/home',\n     name: 'Home'\n      },\n      {\n     route: 'gallery',\n     moduleId: './modules/gallery',\n     name: 'Gallery',\n     auth: true \n     },\n     \n     {\n      route: 'photos',\n      moduleId: './modules/photos',\n      name: 'Photos',\n      auth: true \n      }\n    ]);\n  }\n}","var authConfig = {\n    baseUrl: \"http://localhost:5000/api\",\n    loginUrl: '/users/login',\n    tokenName: 'token',\n    authHeader: 'Authorization',\n    authToken: '',\n    logoutRedirect: '#/home'\n    }\n  \n  export default authConfig;\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport regeneratorRuntime from 'regenerator-runtime';\nimport config from './auth-config';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n    })\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {Gallery} from '../resources/data/gallery';\nimport { AuthService } from 'aurelia-auth';\n\n\n@inject(Router, Gallery, AuthService)\nexport class GalleryList {\n  constructor(router, gallery, auth) {\n    this.gallery = gallery;\n    this.router = router;\n    this.auth = auth;\n    this.user = JSON.parse(sessionStorage.getItem('user'));\n    this.title = \"These are the galleries!\";\n    this.showGallery = true;\n      }\n\n\n  logout() {\n    sessionStorage.removeItem('user');\n    this.auth.logout();\n    this.router.navigate('home');\n  }\n\n  createGallery() {\n    this.galleryObj = {\n      gallery: '',\n      description: '',\n      userId: this.user._id,\n    };\n    this.showGallery = false;\n  }\n\n \n  async saveGallery() {\n    if (this.galleryObj) {\n      let response = await this.gallery.save(this.galleryObj);\n      if (response.error) {\n        alert('There was an error creating the Gallery');\n      } else {\n        }\n    }\n    this.showGallery = true;\n    this.gallery.getUserGallery(this.user._id)\n  }\n\n  async activate() {\n    await this.gallery.getUserGallery(this.user._id);\n  }\n\n  editGallery(gallery) {\n    this.galleryObj = gallery;\n    this.showGallery = false;\n  }\n\n  deleteGallery(gallery) {\n    this.gallery.deleteGallery(gallery._id);\n  }\n\n  back() {\n    this.showGallery = true;\n  }\n\n  showGalleryOrAdd(gallery) {  \n\t  sessionStorage.setItem(\"gallery\", JSON.stringify(gallery));\n  \t  this.router.navigate('photos');   \n    };\n \n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport { Users } from '../resources/data/users';\nimport {AuthService} from 'aurelia-auth';\n\n@inject(Router, Users, AuthService)\nexport class Home {\n  constructor(router, users, auth) {\n    this.router = router;\n    this.auth = auth;\n    this.loginError = '';\n    this.title = \"Here are your photo galleries!\";\n    this.users = users;\n    this.message = 'Home';\n    this.showLogin = true;\n  }\n\n  login() {\n    return this.auth.login(this.email, this.password)\n    .then(response => {\n      sessionStorage.setItem(\"user\", JSON.stringify(response.user));\n      this.loginError = \"\";\n      this.router.navigate('gallery');\n    })\n   .catch(error => {\n   console.log(error);\n   this.loginError = \"Invalid credentials.\";\n  });\n  }\n\n  showRegister() {\n    this.user = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\"\n    };\n    this.registerError = \"\";\n    this.showLogin = false;\n  }\n\n  async save() {\n    let serverResponse = await this.users.save(this.user);\n    if (!serverResponse.error) {\n      this.showLogin = true;\n    } else {\n      this.registerError = \"There was a problem registering the user.\";\n      this.showLogin = false;\n    }\n  }\n\n  goback() {\n    this.showLogin = true;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {Photos} from '../resources/data/photos';\nimport { AuthService } from 'aurelia-auth';\n\n@inject(Router, Photos, AuthService)\nexport class PhotoGallery {\n  constructor(router, photo, auth) {\n    this.photo = photo;\n    this.router = router;\n    this.auth = auth;\n    this.gallery = JSON.parse(sessionStorage.getItem('gallery'));\n    this.editPhoto2 = JSON.parse(sessionStorage.getItem('photo'));\n    this.showPhotos = true;\n    this.PHOTO_SERVICE = 'photos'\n  }\n\n  async savePhoto() { {\n    this.photoObj = {\n      _id: this.photo._id,\n      galleryId: this.gallery._id\n    };\n  }   \n    if (this.photoObj) {\n      let response = await this.photo.save(this.photoObj);\n      if (response.error) {\n        alert('There was an error uploading the photo');\n      } else {\n        var photoId = response._id;\n        var galleryId = response.galleryId;\n        if (this.filesToUpload && this.filesToUpload.length) {\n          await this.photo.uploadFile(this.filesToUpload, galleryId,  photoId);\n          this.filesToUpload = [];\n        }\n      }\n    }\n    this.showPhotos = true;\n    this.photo.getUserPhoto(this.gallery._id);\n  }\n\n  /*async uploadFile(files, userId, photoId) {\n    let formData = new FormData();\n    files.forEach((item, index) => {\n      formData.append(\"file\" + index, item);\n    });\n    let response = await this.data.uploadFiles(formData, this.PHOTO_SERVICE + \"/upload/\" + userId + \"/\" + photoId);\n    return response;\n  }\n\n\n async save(todo) {\n    if (photo) {\n      if (!photo._id) {\n        let response = await this.data.post(photo, this.PHOTO_SERVICE);\n        if (!response.error) {\n          this.todosArray.push(response);\n        }\n        return response;\n      } else {\n        let response = await this.data.put(photo, this.PHOTO_SERVICE + \"/\" + photo._id);\n        if (!response.error) {\n//this.updateArray(response);\n        }\n        return response;\n      }\n    }\n  }*/\n\n  async activate() {\n    await this.photo.getUserPhoto(this.gallery._id);\n  }\n\n  changeFiles() {\n    this.filesToUpload = new Array();\n    this.filesToUpload.push(this.files[0]);\n  }\n\n  removeFile(index) {\n    this.filesToUpload.splice(index, 1);\n  }\n\n  deletePhoto(photo) {\n      this.photo.deletePhoto(photo._id);\n  }\n\n  editPhoto(photo) {\n    this.photoObj2 = photo;\n    this.showPhotos = false;\n  }\n\n  async saveEditedPhoto() {\n    if (this.photoObj2) {\n      let response = await this.photo.saveEdited(this.photoObj2);\n      if (response.error) {\n        alert('There was an error updating the photo details');\n      } else {\n              }\n    }\n    this.showPhotos = true;\n  }\n  back() {\n    this.router.navigate('gallery');\n  }\n\n  back2() {\n    this.showPhotos = true;\n  }\n}\n","export function configure(config) {\n  config.globalResources([\n    './value-converters/date-format',\n    './elements/flatpickr'\n  ]);\n}","import { inject } from 'aurelia-framework';\nimport { HttpClient, json } from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class DataServices {\n\n  constructor(http) {\n    this.httpClient = http;\n    this.BASE_URL = \"http://localhost:5000/api/\";\n    this.httpClient.configure(config => {\n      config\n\t\t\t\t.withBaseUrl(this.BASE_URL)\n\t\t\t\t.withDefaults({\n  credentials: 'same-origin',\n  headers: {\n    'Accept': 'application/json',\n    'X-Requested-With': 'Fetch'\n  }\n\t\t\t\t})\n\t\t\t\t.withInterceptor({\n  request(request) {\n var authHeader = 'Bearer ' + localStorage.getItem('aurelia_token');\n    request.headers.append('Authorization', authHeader);\n\tconsole.log(`Requesting ${request.method} ${request.url}`);\n    return request;\n  },\n  response(response) {\n\tconsole.log(`Received ${response.status} ${response.url}`);\n    return response;\n  }\n\t\t\t\t});\n    });\n  }\n  get(url) {\n    return this.httpClient.fetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n  return data;\n\t\t\t})\n\t\t\t.catch(error => {\n  return error;\n\t\t\t});\n  }\n\n  post(content, url) {\n    return this.httpClient\n\t\t\t.fetch(url, {\n  method: 'post',\n  body: json(content)\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n  return object;\n\t\t\t})\n\t\t\t.catch(error => {\n  return error;\n\t\t\t});\n  }\n\n  put(content, url) {\n    return this.httpClient\n\t\t\t.fetch(url, {\n  method: 'put',\n  body: json(content)\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n  return object;\n\t\t\t})\n\t\t\t.catch(error => {\n  return error;\n\t\t\t});\n  }\n\n  delete(url) {\n    return this.httpClient\n\t\t\t.fetch(url, {\n  method: 'delete'\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n  return object;\n\t\t\t})\n\t\t\t.catch(error => {\n  return error;\n\t\t\t});\n  }\n\n  uploadFiles(files, url) {\n    return this.httpClient\n.fetch(url, {\n  method: 'post',\n  body: files\n})\n.then(response => response.json())\n.then(object => {\n  return object;\n})\n.catch(error => {\n  return error;\n});\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n@inject(DataServices)\nexport class Gallery {\n  constructor(data) {\n    this.data = data;\n    this.GALLERY_SERVICE = 'gallery';\n    this.galleryArray = [];\n  }\n\n\n  async save(gallery) {\n    if (gallery) {\n      if (!gallery._id) {\n        let response = await this.data.post(gallery, this.GALLERY_SERVICE);\n        if (!response.error) {\n          this.galleryArray.push(response);\n        }\n        return response;\n      } else {\n        let response = await this.data.put(gallery, this.GALLERY_SERVICE + \"/\" + gallery._id);\n        if (!response.error) {\n        }\n        return response;\n      }\n    }\n  }\n  async deleteGallery(id) {\n    let response = await this.data.delete(this.GALLERY_SERVICE + \"/\" + id);\n    if (!response.error) {\n      for (let i = 0; i < this.galleryArray.length; i++) {\n        if (this.galleryArray[i]._id === id) {\n          this.galleryArray.splice(i, 1);\n        }\n      }\n    }\n  }\n\n\n  async getUserGallery(id) {\n    let response = await this.data.get(this.GALLERY_SERVICE + \"/\" + id);\n    if (!response.error && !response.message) {\n      this.galleryArray = response;\n    }\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n@inject(DataServices)\nexport class Photos {\n  constructor(data) {\n    this.data = data;\n    this.PHOTO_SERVICE = 'photo';\n    this.GALLERY_SERVICE = 'gallery';\n    this.photoArray = [];\n  }\n\n  async save(photo) {\n    if (photo) {\n      if (!photo._id) {\n        let response = await this.data.post(photo, this.GALLERY_SERVICE + \"/\" + this.PHOTO_SERVICE);\n        if (!response.error) {\n          this.photoArray.push(response);\n        }\n        return response;\n      } else {\n        let response = await this.data.put(photo, this.GALLERY_SERVICE + \"/\" + this.PHOTO_SERVICE + \"/\" + photo._id);\n        if (!response.error) {\n        }\n        return response;\n      }\n    }\n  }\n\n  async uploadFile(files, galleryId, photoId) {\n    let formData = new FormData();\n    files.forEach((item, index) => {\n      formData.append(\"file\" + index, item);\n    });\n    let response = await this.data.uploadFiles(formData, this.GALLERY_SERVICE + \"/upload/\" + galleryId + \"/\" + photoId);\n    return response;\n  }\n\n  async getUserPhoto(galleryId) {\n    let response = await this.data.get(\"users/\" + this.GALLERY_SERVICE + \"/\" + galleryId);\n    if (!response.error && !response.message) {\n      this.photoArray = response;\n    }\n  }\n\n  async deletePhoto(id) {\n    let response = await this.data.delete(\"photo\" + \"/\" + id);\n    if (!response.error) {\n      for (let i = 0; i < this.photoArray.length; i++) {\n        if (this.photoArray[i]._id === id) {\n          this.photoArray.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  async saveEdited(photo) {\n    if (photo) {\n      let response = await this.data.put(photo, this.GALLERY_SERVICE + \"/\" + this.PHOTO_SERVICE + \"/\" + photo._id);\n      if (!response.error) {\n      }\n      return response;\n    }\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\n@inject(DataServices)\nexport class Users {\n  constructor(data) {\n    this.data = data;\n    this.USER_SERVICE = 'users';\n  }\n\n  async save(user) {\n    if (user) {\n      let serverResponse = await this.data.post(user, this.USER_SERVICE);\n      return serverResponse;\n    }\n  }\n}\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\nimport Flatpickr from 'flatpickr';\n@inject(Element)\nexport class FlatPickerCustomElement {\n@bindable({defaultBindingMode: bindingMode.twoWay}) value;\nconstructor(element) {\n  this.element = element;\n}\n\nbind() {\n            const defaultConfig = {\n                \taltInput: true,\n                \taltFormat: \"F j, Y\",\n        wrap: true\n            };\n          this._config = Object.assign({}, defaultConfig);\n            this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\n        }\n\n    attached() {\n                this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\n         }\n        \u000bonChange(selectedDates, dateStr, instance) {\n                this.value = selectedDates[0] \n        }\n\n        valueChanged() {\n                if (!this.flatpickr) {\n                    return;\n                }\n      if (this.value === this.flatpickr.selectedDates[0]) {\n                    return;\n                }\n         let newDate = this.value ? this.value : undefined;\n       this.flatpickr.setDate(newDate);\n            }\n}","import moment from 'moment';\nexport class DateFormatValueConverter {\n  toView(value) {\n    if (value === undefined || value === null) {\n      return;\n    }\n\n    return moment(value).format('MMM Do YYYY');\n  }\n}\n"],"sourceRoot":".."}